<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="1">
        

        <!-- <record id="work_entry_type_ot_hours" model="hr.work.entry.type">
            <field name="name">OT Hours</field>
            <field name="color">0</field>
            <field name="code">OT</field>
            <field name="is_leave" eval="False"/>
            <field name="round_days">HALF</field>
            <field name="round_days_type">HALF-UP</field>
           
        </record>

       

        <record id="work_entry_type_absence" model="hr.work.entry.type">
            <field name="name">Absence</field>
            <field name="code">ABSENCE</field>
            <field name="is_leave">True</field>
            <field name="round_days">HALF</field>
            <field name="round_days_type">DOWN</field>
        </record>

        <record id="other_input_type_ot_hour" model="hr.payslip.input.type">
            <field name="name">OT Hours</field>
            <field name="code">OT</field>
            <field name="country_id" eval="False"/>
        </record>

        <record id="other_input_type_back_pay" model="hr.payslip.input.type">
            <field name="name">Backpay</field>
            <field name="code">BP</field>
            <field name="country_id" eval="False"/>
        </record>

        <record id="other_input_type_gz_ot_hour" model="hr.payslip.input.type">
            <field name="name">Gazette OT Hours</field>
            <field name="code">GZOT</field>
            <field name="country_id" eval="False"/>
        </record>

        <record id="other_input_type_late_count" model="hr.payslip.input.type">
            <field name="name">Late Counts</field>
            <field name="code">LC</field>
            <field name="country_id" eval="False"/>
        </record>

        <record id="other_input_daily_deduction" model="hr.payslip.input.type">
            <field name="name">Daily Deduction</field>
            <field name="code">DD</field>
            <field name="country_id" eval="False"/>
        </record>

        <record id="other_input_type_late_deduction" model="hr.payslip.input.type">
            <field name="name">Late Deduction</field>
            <field name="code">LD</field>
            <field name="country_id" eval="False"/>
        </record> -->

        <!-- <record id="structure_type_employee" model="hr.payroll.structure.type">
            <field name="name">Employee</field>
            <field name="country_id" eval="False"/>
        </record> -->

        <record id="other_input_type_attendance_alw" model="hr.payslip.input.type">
            <field name="name">Attendance Allowance</field>
            <field name="code">AA</field>
            <field name="country_id" eval="False"/>
        </record>

        <record id="other_input_type_late_deduction" model="hr.payslip.input.type">
            <field name="name">Late Deduction</field>
            <field name="code">LD</field>
            <field name="country_id" eval="False"/>
        </record>

        <record id="other_input_type_leave_deduction" model="hr.payslip.input.type">
            <field name="name">Leave Deduction</field>
            <field name="code">LVD</field>
            <field name="country_id" eval="False"/>
        </record>

        <record id="other_input_type_absence" model="hr.payslip.input.type">
            <field name="name">Absence</field>
            <field name="code">ABS</field>
            <field name="country_id" eval="False"/>
        </record>

        <record id="other_input_type_ferry_allowance" model="hr.payslip.input.type">
            <field name="name">Ferry Allowance</field>
            <field name="code">FA</field>
            <field name="country_id" eval="False"/>
        </record>

        <record id="other_input_type_other_deduction" model="hr.payslip.input.type">
            <field name="name">Other Deduction</field>
            <field name="code">OD</field>
            <field name="country_id" eval="False"/>
        </record>

        <record id="office_pay" model="hr.payroll.structure">
            <field name="name">Office</field>
            <field name="type_id" ref="hr_localization.payroll_structure_type_employee"/>
         
            <field name="country_id" eval="False"/>
        </record>

        <record id="allowance_attendance" model="hr.salary.rule">
            <field name="name">Allowance Attendance</field>
            <field name="code">AA</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="struct_id" ref="hr_localization.office_pay"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.AA and inputs.AA.amount or 0
            </field>
        </record>


        <record id="late_deduction" model="hr.salary.rule">
            <field name="name">Late Deduction</field>
            <field name="code">LD</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="struct_id" ref="hr_localization.office_pay"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.LD and inputs.LD.amount or 0
            </field>
        </record>

        <record id="leave_deduction" model="hr.salary.rule">
            <field name="name">Leave Deduction</field>
            <field name="code">LVD</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="struct_id" ref="hr_localization.office_pay"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.LVD and inputs.LVD.amount or 0
            </field>
        </record>

        <record id="ferry_allowance" model="hr.salary.rule">
            <field name="name">Ferry Allowance</field>
            <field name="code">FA</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="struct_id" ref="hr_localization.office_pay"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.FA and inputs.FA.amount or 0
            </field>
        </record>

        <record id="other_deduction" model="hr.salary.rule">
            <field name="name">Other Deduction</field>
            <field name="code">OD</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="struct_id" ref="hr_localization.office_pay"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.OD and inputs.OD.amount or 0
            </field>
        </record>

        <record id="income_tax" model="hr.salary.rule">
            <field name="name">Income Tax</field>
            <field name="code">ICT</field>
            <field name="category_id" ref="hr_payroll.DED"/>
<!--             <field name="sequence" eval="101"/> -->
            <field name="struct_id" ref="hr_localization.office_pay"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = payable_tax = 0
remaining_months = payslip.remaining_months 
previous_month = payslip.total_months - (remaining_months + 1)
unpaid_leave = worked_days.LEAVE90 and worked_days.LEAVE90.number_of_days or 0
income_amt = categories.BASIC 
total_unpaid_days=payslip.sunday_unpaid+unpaid_leave
unpaid_leaves_amt = 0

if contract.wage &gt; 400000:
    ssb_amount = contract.wage * 0.02
    if employee.ssb_not_calculate:
        ssb_amount = 0
    elif abs(ssb_amount) &gt; 6000:
        ssb_amount = 6000      
    
    calendar_days = payslip.days_of_month
    if unpaid_leave:
        unpaid_leaves_amt = ((contract.wage / calendar_days) * total_unpaid_days)
	
    this_month_income = income_amt - unpaid_leaves_amt 
    remaining_month_income = remaining_months * contract.wage  
    actual_annual_income = payslip.previous_income + this_month_income + remaining_month_income 

    twenty_percent_exemption = actual_annual_income * 0.2
    if twenty_percent_exemption &lt;= 10000000:
        twenty_percent_exemption = twenty_percent_exemption
    else:
        twenty_percent_exemption = 10000000

    if actual_annual_income &gt; 4800000:
        family_exemption = 0
        if employee.spouse_exemption:
            family_exemption += 1000000
        if employee.father_exemption:
            family_exemption += 1000000
        if employee.mother_exemption:
            family_exemption += 1000000
        if employee.children &gt; 0:
            family_exemption += employee.children * 500000
        taxable_income = actual_annual_income - family_exemption - twenty_percent_exemption - ((remaining_months + 1 + previous_month) * ssb_amount)
																									

    # For 0 to 2,000,000 Kyats == 0%
        if taxable_income &gt; 2000000:

    # For 2,000,001 to 10,000,000 Kyats == 5%
            if taxable_income &lt;= 10000000:
                payable_tax += (taxable_income - 2000000) * 0.05;
            if taxable_income &gt; 10000000:
                payable_tax += (10000000- 2000000) * 0.05;

    # For 10,000,001 to 30,000,000 Kyats == 10%
                if taxable_income &lt;= 30000000:
                    payable_tax += (taxable_income - 10000000 ) * 0.10;
                if taxable_income &gt; 30000000:
                    payable_tax += (30000000- 10000000 ) * 0.10;

    # For 30,000,001 to 50,000,000 Kyats == 15%
                    if taxable_income &lt;= 50000000:
                        payable_tax += (taxable_income - 30000000) * 0.15;
                    if taxable_income &gt; 50000000:
                        payable_tax += (50000000 - 30000000) * 0.15;

    # For 50,000,001 to 70,000,000 Kyats == 20%
                        if taxable_income &lt;= 70000000:
                            payable_tax += (taxable_income - 50000000 ) * 0.20;
                        if taxable_income &gt; 70000000:
                            payable_tax += (70000000 - 50000000 ) * 0.20;

    # For 70,000,001 Kyats and Up == 25%
                            payable_tax += (taxable_income - 70000000) * 0.25;

    payable_tax = payable_tax - payslip.previous_tax_paid 
    result = payable_tax / (remaining_months + 1)
if result &lt; 0:
    result = 0
result = round(result)
            </field>
        </record>


        <record id="office_SSB" model="hr.salary.rule">
            <field name="name">SSB</field>
            <field name="code">SSB</field>
            <field name="category_id" ref="hr_payroll.DED"/>
<!--             <field name="sequence" eval="9"/> -->
            <field name="struct_id" ref="hr_localization.office_pay"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = contract.wage * 0.02
if employee.ssb_not_calculate:
    result = 0                
elif abs(result) > 6000:
    result = 6000
            </field>
        </record>


        <record id="abs_deduction" model="hr.salary.rule">
            <field name="name">Absence Deduction</field>
            <field name="code">ABS</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="struct_id" ref="hr_localization.office_pay"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.ABS and inputs.ABS.amount or 0
            </field>
        </record>


        

    </data>
</odoo>
