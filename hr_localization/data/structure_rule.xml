<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>

        <record id="payroll_structure_type_employee" model="hr.payroll.structure.type">
            <field name="name">Employee</field>
            <field name="country_id" eval="False"/>
        </record>


        <record id="input_type_site_allowance" model="hr.payslip.input.type">
            <field name="name">Site Allowance</field>
            <field name="code">SA</field>
            <field name="country_id" eval="False"/>
        </record>

        <record id="input_type_offshore_allowance" model="hr.payslip.input.type">
            <field name="name">Special Offshore Allowance</field>
            <field name="code">SOA</field>
            <field name="country_id" eval="False"/>
        </record>

        <record id="input_type_bonus" model="hr.payslip.input.type">
            <field name="name">BONUS</field>
            <field name="code">BO</field>
            <field name="country_id" eval="False"/>
        </record>
        <record id="input_type_rses_bonus" model="hr.payslip.input.type">
            <field name="name">Rses Bonus</field>
            <field name="code">RBO</field>
            <field name="country_id" eval="False"/>
        </record>
        <record id="input_type_covid_allowance" model="hr.payslip.input.type">
            <field name="name">Covid Separation Allowance</field>
            <field name="code">CSA</field>
            <field name="country_id" eval="False"/>
        </record>
        <record id="input_type_recup_allowance" model="hr.payslip.input.type">
            <field name="name">Recup Leave Compensation</field>
            <field name="code">RLC</field>
            <field name="country_id" eval="False"/>
        </record>
        <record id="input_type_car_allowance" model="hr.payslip.input.type">
            <field name="name">Car Allowance</field>
            <field name="code">CA</field>
            <field name="country_id" eval="False"/>
        </record>
        <record id="input_type_transport_allowance" model="hr.payslip.input.type">
            <field name="name">Transport Allowance</field>
            <field name="code">TA</field>
            <field name="country_id" eval="False"/>
        </record>
        <record id="input_type_holidays_allowance" model="hr.payslip.input.type">
            <field name="name">Public Holiday Pay</field>
            <field name="code">PHP</field>
            <field name="country_id" eval="False"/>
        </record>
        <record id="input_type_special_car_loan" model="hr.payslip.input.type">
            <field name="name">Speial Car Loan</field>
            <field name="code">SCL</field>
            <field name="country_id" eval="False"/>
        </record>
        <record id="input_type_share_loan" model="hr.payslip.input.type">
            <field name="name">Share Loan</field>
            <field name="code">SL</field>
            <field name="country_id" eval="False"/>
        </record>
        <record id="input_type_education_loan" model="hr.payslip.input.type">
            <field name="name">Education Loan</field>
            <field name="code">EL</field>
            <field name="country_id" eval="False"/>
        </record>
        <record id="input_type_social_contribute" model="hr.payslip.input.type">
            <field name="name">Social Security Contribution</field>
            <field name="code">SSC</field>
            <field name="country_id" eval="False"/>
        </record>

        

        <record id="structure_site" model="hr.payroll.structure">
            <field name="name">Site</field>
            <field name="type_id" ref="hr_localization.payroll_structure_type_employee"/>
            <field name="country_id" eval="False"/>
        </record>


        <record id="site_allowance" model="hr.salary.rule">
            <field name="name">Site Allowance</field>
            <field name="code">SA</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="struct_id" ref="hr_localization.structure_site"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.SA and inputs.SA.amount or 0
            </field>
        </record>

        <record id="special_offshore_alw" model="hr.salary.rule">
            <field name="name">Special Offshore Allowance</field>
            <field name="code">SOA</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="struct_id" ref="hr_localization.structure_site"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.SOA and inputs.SOA.amount or 0
            </field>
        </record>
        <record id="bonus" model="hr.salary.rule">
            <field name="name">BONUS</field>
            <field name="code">BO</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="struct_id" ref="hr_localization.structure_site"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.BO and inputs.BO.amount or 0
            </field>
            
        </record>
        <record id="rses_bonus" model="hr.salary.rule">
            <field name="name">Rses Bonus</field>
            <field name="code">RBO</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="struct_id" ref="hr_localization.structure_site"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.RBO and inputs.RBO.amount or 0
            </field>
            
        </record>
        <record id="covid_alw" model="hr.salary.rule">
            <field name="name">Covid Separation Allowance</field>
            <field name="code">CSA</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="struct_id" ref="hr_localization.structure_site"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.CSA and inputs.CSA.amount or 0
            </field>
        </record>

        <record id="recup_leave_compensation" model="hr.salary.rule">
            <field name="name">Recup Leave Compensation</field>
            <field name="code">RLC</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="struct_id" ref="hr_localization.structure_site"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.RLC and inputs.RLC.amount or 0
            </field>
            
        </record>
        <record id="social_security_contribution" model="hr.salary.rule">
            <field name="name">Social Security Contribution</field>
            <field name="code">SSC</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="struct_id" ref="hr_localization.structure_site"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.SSC and inputs.SSC.amount or 0
            </field>
            
        </record>
        
        <record id="car_alw" model="hr.salary.rule">
            <field name="name">Car Allowance</field>
            <field name="code">CA</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="struct_id" ref="hr_localization.structure_site"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.CA and inputs.CA.amount or 0
            </field>
        </record>

        <record id="special_car_loan" model="hr.salary.rule">
            <field name="name">Special Car loan</field>
            <field name="code">SCL</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="struct_id" ref="hr_localization.structure_site"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.SCL and inputs.SCL.amount or 0
            </field>
        </record>

        <record id="ssb_site" model="hr.salary.rule">
            <field name="name">SSB</field>
            <field name="code">SSB</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="struct_id" ref="hr_localization.structure_site"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
unpaid_leave = worked_days.LEAVE90 and worked_days.LEAVE90.number_of_days or 0
attendance_days = worked_days.WORK100 and worked_days.WORK100.number_of_days or 0

result = contract.wage * 0.02
if employee.ssb_not_calculate:
    result = 0   
elif unpaid_leave == attendance_days :
      result = 0   
elif abs(result) &gt; 6000:
    result = 6000            
            </field>
        </record>

        <record id="income_tax_site" model="hr.salary.rule">
            <field name="name">Income Tax</field>
            <field name="code">ICT</field>
            <field name="category_id" ref="hr_payroll.DED"/>
<!--             <field name="sequence" eval="101"/> -->
            <field name="struct_id" ref="hr_localization.structure_site"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = payable_tax = 0
remaining_months = payslip.remaining_months 
previous_month = payslip.total_months - (remaining_months + 1)
unpaid_leave = worked_days.LEAVE90 and worked_days.LEAVE90.number_of_days or 0
income_amt = categories.BASIC 
total_unpaid_days=payslip.sunday_unpaid+unpaid_leave
unpaid_leaves_amt = 0

if contract.wage &gt; 400000:
    ssb_amount = contract.wage * 0.02
    if employee.ssb_not_calculate:
        ssb_amount = 0
    elif abs(ssb_amount) &gt; 6000:
        ssb_amount = 6000      
    
    calendar_days = payslip.days_of_month
    if unpaid_leave:
        unpaid_leaves_amt = ((contract.wage / calendar_days) * total_unpaid_days)
	
    this_month_income = income_amt - unpaid_leaves_amt 
    remaining_month_income = remaining_months * contract.wage  
    actual_annual_income = payslip.previous_income + this_month_income + remaining_month_income 

    twenty_percent_exemption = actual_annual_income * 0.2
    if twenty_percent_exemption &lt;= 10000000:
        twenty_percent_exemption = twenty_percent_exemption
    else:
        twenty_percent_exemption = 10000000

    if actual_annual_income &gt; 4800000:
        family_exemption = 0
        if employee.spouse_exemption:
            family_exemption += 1000000
        if employee.father_exemption:
            family_exemption += 1000000
        if employee.mother_exemption:
            family_exemption += 1000000
        if employee.children &gt; 0:
            family_exemption += employee.children * 500000
        taxable_income = actual_annual_income - family_exemption - twenty_percent_exemption - ((remaining_months + 1 + previous_month) * ssb_amount)
																									

    # For 0 to 2,000,000 Kyats == 0%
        if taxable_income &gt; 2000000:

    # For 2,000,001 to 10,000,000 Kyats == 5%
            if taxable_income &lt;= 10000000:
                payable_tax += (taxable_income - 2000000) * 0.05;
            if taxable_income &gt; 10000000:
                payable_tax += (10000000- 2000000) * 0.05;

    # For 10,000,001 to 30,000,000 Kyats == 10%
                if taxable_income &lt;= 30000000:
                    payable_tax += (taxable_income - 10000000 ) * 0.10;
                if taxable_income &gt; 30000000:
                    payable_tax += (30000000- 10000000 ) * 0.10;

    # For 30,000,001 to 50,000,000 Kyats == 15%
                    if taxable_income &lt;= 50000000:
                        payable_tax += (taxable_income - 30000000) * 0.15;
                    if taxable_income &gt; 50000000:
                        payable_tax += (50000000 - 30000000) * 0.15;

    # For 50,000,001 to 70,000,000 Kyats == 20%
                        if taxable_income &lt;= 70000000:
                            payable_tax += (taxable_income - 50000000 ) * 0.20;
                        if taxable_income &gt; 70000000:
                            payable_tax += (70000000 - 50000000 ) * 0.20;

    # For 70,000,001 Kyats and Up == 25%
                            payable_tax += (taxable_income - 70000000) * 0.25;

    payable_tax = payable_tax - payslip.previous_tax_paid 
    result = payable_tax / (remaining_months + 1)
if result &lt; 0:
    result = 0
result = round(result)
            </field>
        </record>

<!--Yangon Salary Structure-->

        <record id="structure_ygn" model="hr.payroll.structure">
            <field name="name">Yangon</field>
            <field name="type_id" ref="hr_localization.payroll_structure_type_employee"/>
            <field name="country_id" eval="False"/>
        </record>


        <record id="site_allowances" model="hr.salary.rule">
            <field name="name">Site Allowance</field>
            <field name="code">SA</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="struct_id" ref="hr_localization.structure_ygn"/>
            <field name="condition_select">none</field>
            <field name="amount_python_compute">
result = inputs.SA and inputs.SA.amount or 0
            </field>
            
        </record>

        <record id="transport_allowance" model="hr.salary.rule">
            <field name="name">Transport Allowance</field>
            <field name="code">TA</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="struct_id" ref="hr_localization.structure_ygn"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.TA and inputs.TA.amount or 0
            </field>
            
        </record>
        <record id="bonues" model="hr.salary.rule">
            <field name="name">BONUS</field>
            <field name="code">BO</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="struct_id" ref="hr_localization.structure_ygn"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.BO and inputs.BO.amount or 0
            </field>
            
        </record>
        <record id="public_holiday_pay" model="hr.salary.rule">
            <field name="name">Public Holiday Pay</field>
            <field name="code">PHP</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="struct_id" ref="hr_localization.structure_ygn"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.PHP and inputs.PHP.amount or 0
            </field>
            
        </record>
        
        <record id="covid_alws" model="hr.salary.rule">
            <field name="name">Covid Separation Allowance</field>
            <field name="code">CSA</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="struct_id" ref="hr_localization.structure_ygn"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.CSA and inputs.CSA.amount or 0
            </field>
            
        </record>

        <record id="share_loans" model="hr.salary.rule">
            <field name="name">Share Loan</field>
            <field name="code">SL</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="struct_id" ref="hr_localization.structure_ygn"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.SL and inputs.SL.amount or 0
            </field>
            
        </record>
        <record id="social_security_contributions" model="hr.salary.rule">
            <field name="name">Social Security Contribution</field>
            <field name="code">SSC</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="struct_id" ref="hr_localization.structure_ygn"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.SSC and inputs.SSC.amount or 0
            </field>
            
        </record>
        
        <record id="car_alws" model="hr.salary.rule">
            <field name="name">Car Allowance</field>
            <field name="code">CA</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="struct_id" ref="hr_localization.structure_ygn"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.CA and inputs.CA.amount or 0
            </field>
        </record>

        <record id="special_car_loanes" model="hr.salary.rule">
            <field name="name">Special Car loan</field>
            <field name="code">SCL</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="struct_id" ref="hr_localization.structure_ygn"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.SCL and inputs.SCL.amount or 0
            </field>
        </record>

        <record id="edu_loans" model="hr.salary.rule">
            <field name="name">Education loan</field>
            <field name="code">EL</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="struct_id" ref="hr_localization.structure_ygn"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = inputs.EL and inputs.EL.amount or 0
            </field>
        </record>

        
        <record id="ssb_ygn" model="hr.salary.rule">
            <field name="name">SSB</field>
            <field name="code">SSB</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="struct_id" ref="hr_localization.structure_ygn"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
unpaid_leave = worked_days.LEAVE90 and worked_days.LEAVE90.number_of_days or 0
attendance_days = worked_days.WORK100 and worked_days.WORK100.number_of_days or 0

result = contract.wage * 0.02
if employee.ssb_not_calculate:
    result = 0   
elif unpaid_leave == attendance_days :
      result = 0   
elif abs(result) &gt; 6000:
    result = 6000            
            </field>
        </record>

        <record id="income_tax_ygn" model="hr.salary.rule">
            <field name="name">Income Tax</field>
            <field name="code">ICT</field>
            <field name="category_id" ref="hr_payroll.DED"/>
<!--             <field name="sequence" eval="101"/> -->
            <field name="struct_id" ref="hr_localization.structure_ygn"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = payable_tax = 0
remaining_months = payslip.remaining_months 
previous_month = payslip.total_months - (remaining_months + 1)
unpaid_leave = worked_days.LEAVE90 and worked_days.LEAVE90.number_of_days or 0
income_amt = categories.BASIC 
total_unpaid_days=payslip.sunday_unpaid+unpaid_leave
unpaid_leaves_amt = 0

if contract.wage &gt; 400000:
    ssb_amount = contract.wage * 0.02
    if employee.ssb_not_calculate:
        ssb_amount = 0
    elif abs(ssb_amount) &gt; 6000:
        ssb_amount = 6000      
    
    calendar_days = payslip.days_of_month
    if unpaid_leave:
        unpaid_leaves_amt = ((contract.wage / calendar_days) * total_unpaid_days)
	
    this_month_income = income_amt - unpaid_leaves_amt 
    remaining_month_income = remaining_months * contract.wage  
    actual_annual_income = payslip.previous_income + this_month_income + remaining_month_income 

    twenty_percent_exemption = actual_annual_income * 0.2
    if twenty_percent_exemption &lt;= 10000000:
        twenty_percent_exemption = twenty_percent_exemption
    else:
        twenty_percent_exemption = 10000000

    if actual_annual_income &gt; 4800000:
        family_exemption = 0
        if employee.spouse_exemption:
            family_exemption += 1000000
        if employee.father_exemption:
            family_exemption += 1000000
        if employee.mother_exemption:
            family_exemption += 1000000
        if employee.children &gt; 0:
            family_exemption += employee.children * 500000
        taxable_income = actual_annual_income - family_exemption - twenty_percent_exemption - ((remaining_months + 1 + previous_month) * ssb_amount)
																									

    # For 0 to 2,000,000 Kyats == 0%
        if taxable_income &gt; 2000000:

    # For 2,000,001 to 10,000,000 Kyats == 5%
            if taxable_income &lt;= 10000000:
                payable_tax += (taxable_income - 2000000) * 0.05;
            if taxable_income &gt; 10000000:
                payable_tax += (10000000- 2000000) * 0.05;

    # For 10,000,001 to 30,000,000 Kyats == 10%
                if taxable_income &lt;= 30000000:
                    payable_tax += (taxable_income - 10000000 ) * 0.10;
                if taxable_income &gt; 30000000:
                    payable_tax += (30000000- 10000000 ) * 0.10;

    # For 30,000,001 to 50,000,000 Kyats == 15%
                    if taxable_income &lt;= 50000000:
                        payable_tax += (taxable_income - 30000000) * 0.15;
                    if taxable_income &gt; 50000000:
                        payable_tax += (50000000 - 30000000) * 0.15;

    # For 50,000,001 to 70,000,000 Kyats == 20%
                        if taxable_income &lt;= 70000000:
                            payable_tax += (taxable_income - 50000000 ) * 0.20;
                        if taxable_income &gt; 70000000:
                            payable_tax += (70000000 - 50000000 ) * 0.20;

    # For 70,000,001 Kyats and Up == 25%
                            payable_tax += (taxable_income - 70000000) * 0.25;

    payable_tax = payable_tax - payslip.previous_tax_paid 
    result = payable_tax / (remaining_months + 1)
if result &lt; 0:
    result = 0
result = round(result)
            </field>
        </record>


        
    </data>
</odoo>
